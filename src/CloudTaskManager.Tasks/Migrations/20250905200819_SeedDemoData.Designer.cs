// <auto-generated />
using System;
using CloudTaskManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CloudTaskManager.Migrations
{
    [DbContext(typeof(TaskDbContext))]
    [Migration("20250905200819_SeedDemoData")]
    partial class SeedDemoData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("CloudTaskManager.Models.Board", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Boards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is a demo board for testing.",
                            Name = "Demo Project"
                        });
                });

            modelBuilder.Entity("CloudTaskManager.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BoardId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BoardId = 1,
                            Role = "BoardOwner",
                            UserId = "demo-user-1"
                        },
                        new
                        {
                            Id = 2,
                            BoardId = 1,
                            Role = "User",
                            UserId = "demo-user-2"
                        });
                });

            modelBuilder.Entity("CloudTaskManager.Models.TaskItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AssignedToUserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("BoardId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentTaskId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToUserId");

                    b.HasIndex("BoardId");

                    b.HasIndex("ParentTaskId");

                    b.ToTable("TaskItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d4f62163-15eb-431a-9495-2a7bbd3cb998"),
                            BoardId = 1,
                            CreatedAt = new DateTime(2025, 9, 5, 20, 8, 18, 696, DateTimeKind.Utc).AddTicks(5556),
                            Description = "Initialize solution, setup GitHub repo",
                            DueDate = new DateTime(2025, 9, 7, 20, 8, 18, 696, DateTimeKind.Utc).AddTicks(5064),
                            Status = "Pending",
                            Title = "Setup project",
                            UpdatedAt = new DateTime(2025, 9, 5, 20, 8, 18, 696, DateTimeKind.Utc).AddTicks(5746)
                        },
                        new
                        {
                            Id = new Guid("8252bf04-151b-40c6-92db-b8904781ca50"),
                            BoardId = 1,
                            CreatedAt = new DateTime(2025, 9, 5, 20, 8, 18, 696, DateTimeKind.Utc).AddTicks(5947),
                            Description = "Add Identity + JWT auth",
                            DueDate = new DateTime(2025, 9, 10, 20, 8, 18, 696, DateTimeKind.Utc).AddTicks(5943),
                            Status = "InProgress",
                            Title = "Implement login",
                            UpdatedAt = new DateTime(2025, 9, 5, 20, 8, 18, 696, DateTimeKind.Utc).AddTicks(5948)
                        });
                });

            modelBuilder.Entity("CloudTaskManager.Models.Member", b =>
                {
                    b.HasOne("CloudTaskManager.Models.Board", "Board")
                        .WithMany("Members")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");
                });

            modelBuilder.Entity("CloudTaskManager.Models.TaskItem", b =>
                {
                    b.HasOne("CloudTaskManager.Models.Board", "Board")
                        .WithMany("Tasks")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CloudTaskManager.Models.TaskItem", "ParentTask")
                        .WithMany("SubTasks")
                        .HasForeignKey("ParentTaskId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Board");

                    b.Navigation("ParentTask");
                });

            modelBuilder.Entity("CloudTaskManager.Models.Board", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("CloudTaskManager.Models.TaskItem", b =>
                {
                    b.Navigation("SubTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
