// <auto-generated />
using System;
using CloudTaskManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CloudTaskManager.Migrations
{
    [DbContext(typeof(TaskDbContext))]
    partial class TaskDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("CloudTaskManager.Models.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TaskItemId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TaskItemId");

                    b.ToTable("Attachments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FileName = "ProjectSetupGuide.pdf",
                            FileUrl = "/files/project-setup-guide.pdf",
                            TaskItemId = new Guid("11111111-1111-1111-1111-111111111111"),
                            UploadedAt = new DateTime(2025, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            FileName = "AuthDiagram.png",
                            FileUrl = "/files/auth-diagram.png",
                            TaskItemId = new Guid("22222222-2222-2222-2222-222222222222"),
                            UploadedAt = new DateTime(2025, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CloudTaskManager.Models.Board", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Boards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "This is a demo board for testing.",
                            Name = "Demo Project"
                        });
                });

            modelBuilder.Entity("CloudTaskManager.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TaskItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TaskItemId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "This is the first comment on Setup project",
                            CreatedAt = new DateTime(2025, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskItemId = new Guid("11111111-1111-1111-1111-111111111111"),
                            UserId = "demo-user-1"
                        },
                        new
                        {
                            Id = 2,
                            Content = "Make sure to use JWT Bearer tokens",
                            CreatedAt = new DateTime(2025, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskItemId = new Guid("22222222-2222-2222-2222-222222222222"),
                            UserId = "demo-user-2"
                        });
                });

            modelBuilder.Entity("CloudTaskManager.Models.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TaskItemId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TaskItemId");

                    b.ToTable("Labels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#FF5733",
                            Name = "Backend",
                            TaskItemId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 2,
                            Color = "#33C1FF",
                            Name = "Auth",
                            TaskItemId = new Guid("22222222-2222-2222-2222-222222222222")
                        });
                });

            modelBuilder.Entity("CloudTaskManager.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BoardId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BoardId = 1,
                            Role = "BoardOwner",
                            UserId = "demo-user-1"
                        },
                        new
                        {
                            Id = 2,
                            BoardId = 1,
                            Role = "User",
                            UserId = "demo-user-2"
                        });
                });

            modelBuilder.Entity("CloudTaskManager.Models.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSent")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReminderTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TaskItemId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TaskItemId");

                    b.ToTable("Reminders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsSent = false,
                            ReminderTime = new DateTime(2025, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskItemId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 2,
                            IsSent = false,
                            ReminderTime = new DateTime(2025, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskItemId = new Guid("22222222-2222-2222-2222-222222222222")
                        });
                });

            modelBuilder.Entity("CloudTaskManager.Models.TaskItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AssignedToUserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("BoardId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentTaskId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToUserId");

                    b.HasIndex("BoardId");

                    b.HasIndex("ParentTaskId");

                    b.ToTable("TaskItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            BoardId = 1,
                            CreatedAt = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Initialize solution, setup GitHub repo",
                            DueDate = new DateTime(2025, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Pending",
                            Title = "Setup project",
                            UpdatedAt = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            BoardId = 1,
                            CreatedAt = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Add Identity + JWT auth",
                            DueDate = new DateTime(2025, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "InProgress",
                            Title = "Implement login",
                            UpdatedAt = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CloudTaskManager.Models.Attachment", b =>
                {
                    b.HasOne("CloudTaskManager.Models.TaskItem", "TaskItem")
                        .WithMany("Attachments")
                        .HasForeignKey("TaskItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskItem");
                });

            modelBuilder.Entity("CloudTaskManager.Models.Comment", b =>
                {
                    b.HasOne("CloudTaskManager.Models.TaskItem", "TaskItem")
                        .WithMany("Comments")
                        .HasForeignKey("TaskItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskItem");
                });

            modelBuilder.Entity("CloudTaskManager.Models.Label", b =>
                {
                    b.HasOne("CloudTaskManager.Models.TaskItem", "TaskItem")
                        .WithMany("Labels")
                        .HasForeignKey("TaskItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskItem");
                });

            modelBuilder.Entity("CloudTaskManager.Models.Member", b =>
                {
                    b.HasOne("CloudTaskManager.Models.Board", "Board")
                        .WithMany("Members")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");
                });

            modelBuilder.Entity("CloudTaskManager.Models.Reminder", b =>
                {
                    b.HasOne("CloudTaskManager.Models.TaskItem", "TaskItem")
                        .WithMany("Reminders")
                        .HasForeignKey("TaskItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskItem");
                });

            modelBuilder.Entity("CloudTaskManager.Models.TaskItem", b =>
                {
                    b.HasOne("CloudTaskManager.Models.Board", "Board")
                        .WithMany("Tasks")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CloudTaskManager.Models.TaskItem", "ParentTask")
                        .WithMany("SubTasks")
                        .HasForeignKey("ParentTaskId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Board");

                    b.Navigation("ParentTask");
                });

            modelBuilder.Entity("CloudTaskManager.Models.Board", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("CloudTaskManager.Models.TaskItem", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Comments");

                    b.Navigation("Labels");

                    b.Navigation("Reminders");

                    b.Navigation("SubTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
